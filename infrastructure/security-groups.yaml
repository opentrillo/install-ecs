AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template contains the security groups required by our entire stack.
  We create them in a separate nested template, so they can be referenced
  by all of the other nested templates.

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the security groups should be deployed to

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.192.20.0/24

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.192.21.0/24

Resources:

  # This security group defines who/where is allowed to access the ECS hosts directly.
  # By default we're just allowing access from the load balancer.  If you want to SSH
  # into the hosts, or expose non-load balanced services you can open their ports here.
  ECSHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the ECS hosts and the tasks/containers that run on them
      SecurityGroupIngress:
        # Only allow inbound access to ECS from the ELB
        - SourceSecurityGroupId: !Ref PublicALBSecurityGroup
          IpProtocol: -1
        - SourceSecurityGroupId: !Ref PrivateALBSecurityGroup
          IpProtocol: -1
        - SourceSecurityGroupId: !Ref BastionSecurityGroup
          IpProtocol: tcp
          ToPort: 22
          FromPort: 22
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-ECS-Hosts

  # This security group defines who/where is allowed to access the Application Load Balancer.
  # By default, we've opened this up to the public internet (0.0.0.0/0) but can you restrict
  # it further if you want.
  PublicALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the public load balancer that sits in front of ECS
      SecurityGroupIngress:
        # Allow access from anywhere to our ECS services
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-LoadBalancers

  PrivateALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the private load balancer that sits in front of ECS
      SecurityGroupIngress:
        - CidrIp: !Ref PrivateSubnet1CIDR
          IpProtocol: -1
        - CidrIp: !Ref PrivateSubnet2CIDR
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-LoadBalancers

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access to the bastion host
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          ToPort: 22
          FromPort: 22
      Tags:
        - Key: Name
          Value: !Sub "${EnvironmentName}-BastionSecurityGroup"

Outputs:

  ECSHostSecurityGroup:
    Description: A reference to the security group for ECS hosts
    Value: !Ref ECSHostSecurityGroup

  PublicALBSecurityGroup:
    Description: A reference to the security group for public load balancer
    Value: !Ref PublicALBSecurityGroup

  PrivateALBSecurityGroup:
    Description: A reference to the security group for private load balancer
    Value: !Ref PrivateALBSecurityGroup

  BastionSecurityGroup:
    Description: A reference to the security group for bastion host
    Value: !Ref BastionSecurityGroup
