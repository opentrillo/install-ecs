AWSTemplateFormatVersion: "2010-09-09"

Description: >
  This template deploys two Application Load Balancers.
  We create them in a separate nested template, so that they can be referenced by all of the other nested templates.

Parameters:

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the Application Load Balancer should be deployed to

  PublicSubnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  PrivateSubnets:
    Description: Choose which subnets the Application Load Balancer should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  PublicALBSecurityGroup:
    Description: Select the Security Group to apply to the Application Load Balancer
    Type: AWS::EC2::SecurityGroup::Id

  PrivateALBSecurityGroup:
    Description: Select the Security Group to apply to the Application Load Balancer
    Type: AWS::EC2::SecurityGroup::Id

  TrilloAlbAcmCertificate:
    AllowedPattern: ^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$
    Description: ACM certificate ARN for the Trillo ALBs - it should be created in the same region
    Type: String

Resources:

  PublicLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName}-PublicALB
      Scheme: internet-facing
      Subnets: !Ref PublicSubnets
      SecurityGroups:
        - !Ref PublicALBSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PublicALB

  # Needed instead of "service-discovery"
  PrivateLoadBalancerRT:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName}-PrivateALB-RT
      Scheme: internal
      Subnets: !Ref PrivateSubnets
      SecurityGroups:
        - !Ref PrivateALBSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PrivateALB-RT

  PrivateLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub ${EnvironmentName}-PrivateALB
      Scheme: internal
      Subnets: !Ref PrivateSubnets
      SecurityGroups:
        - !Ref PrivateALBSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-PrivateALB

  PublicALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref PublicLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: !Ref TrilloAlbAcmCertificate
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup1

  PrivateALBListenerRT:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref PrivateLoadBalancerRT
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
      - CertificateArn: !Ref TrilloAlbAcmCertificate
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroupRT

  PrivateALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref PrivateLoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
      - CertificateArn: !Ref TrilloAlbAcmCertificate
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup2

  # We define a default target group here, as this is a mandatory Parameters
  # when creating an Application Load Balancer Listener. This is not used, instead
  # a target group is created per-service in each service template (../services/*)
  DefaultTargetGroup1:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !GetAtt PublicLoadBalancer.LoadBalancerName
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP

  DefaultTargetGroup2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !GetAtt PrivateLoadBalancer.LoadBalancerName
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP

  DefaultTargetGroupRT:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !GetAtt PrivateLoadBalancerRT.LoadBalancerName
      VpcId: !Ref VPC
      Port: 80
      Protocol: HTTP

Outputs:

  PublicLoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref PublicLoadBalancer

  PrivateLoadBalancerRT:
    Description: A reference to the Application Load Balancer
    Value: !Ref PrivateLoadBalancerRT

  PrivateLoadBalancer:
    Description: A reference to the Application Load Balancer
    Value: !Ref PrivateLoadBalancer

  PublicLoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt PublicLoadBalancer.DNSName

  PrivateLoadBalancerRTUrl:
    Description: The URL of the ALB
    Value: !GetAtt PrivateLoadBalancerRT.DNSName

  PrivateLoadBalancerUrl:
    Description: The URL of the ALB
    Value: !GetAtt PrivateLoadBalancer.DNSName

  PublicALBListener:
    Description: A reference to a port 80 listener
    Value: !Ref PublicALBListener

  PrivateALBListenerRT:
    Description: A reference to a port 80 listener
    Value: !Ref PrivateALBListenerRT

  PrivateALBListener:
    Description: A reference to a port 80 listener
    Value: !Ref PrivateALBListener
